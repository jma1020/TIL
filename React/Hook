useEffect 
useEffect(() => {
    console.log('use Effect RAN');
}, [counter])


useEffect 두번째 인자 Array 가 업데이트가 되면 첫번째 인자가 실행이
된다   ==>(component did update)

만약 두번째 인자를 비우면 컴포넌트가 did mount 할때 첫번째 함수를
불러라~ ==> (component did mount)
     {맨처음에 컴포넌트가 마운드가 됬을때만 실행이 된다}


여기서 useEffect 기능 중 한가지가 더 있는데

useEffect(() => {
    console.log('use Effect RAN');

    //Unmount
    return () => {
        console.log('Unmount')
    }

}, [] )

리턴에 함수를 집어넣으면 함수안에 들어가는 값이 컴포넌트가 언마운트가
되었을 때 실행을 하게됨 ((이 컴포넌트가 사라졌을 때))
==> (언제 쓰냐??)  socket IO 쓰면 혹은 STREAM 

useEffect(() => {
    //SOCKET IO OPEN
    console.log('use Effect RAN');

    //Unmount
    return () => {
        //SOCKET IO CLOSE
        console.log('Unmount')
    }

}, [] )


custom Hook 

코드가 길어지면 복잡해지니 개인이 보기쉽게 잘 만들자 


useState 

데이터는 변수에 넣던가 state에 넣던가 

useState 사용방법

let [a,b] = useState()   (useState 는 array  두개를 반환한다 현재값, 현재값을 수정하기위한 함수 
                          [state 데이터], [state 데이터 변경 함수 ]

--> 이건 js 신문법  ES6 destructuring     var [a,b] = [10,100]

기존에는 하나하나 대입해주었어야 했다 

useState('') 안에 여러 데이터 저장 가능  (문자,숫자,array,object)

ex) useState(['남자코트','여자코트'])

{ a[0] } ==남자코트

state 쓰는 이유   : 웹이 App처럼 동작하게 만들고 싶어서  그러면 중요한 데이터는
모두 state 에 저장
간혹 글제목이라든 변경이 되거나 순서가 바뀔 때 사용
--> 그렇게 글제목이 바뀌게되면(state 로 만들어진 데이터가 바뀌면)  !! 데이터를 담고있는
HTML 이 재렌더링 된다.       개중요!!!!!!!

그냥 변수로 만든 HTML 들은 데이터가 바껴도 재렌더링이 바로 되지않고 새로고침이 되어야
재렌더링이 된다 

state 로 만들어놓은 데이터들은   
사이트 내에서 state 조작 버튼이나 (정렬버튼을 눌렀거나, 제목을 수정하든가)  그럴 때
새로고침 없이도 HTML에 재렌더링이 이루어짐 
고로 == HTML 이 새로고침 없이도 스무스하게 변경됨 

자주 바뀌는, 중요한 데이터는 변수 말고 state로 저장해서 쓰세요 

그래서 잘생각해서 선택하기


코딩애플 유튜브 4강 

이벤트 리스너  
옛날자바 스크립트면 addEventListener , onClick

쉬운게 onClick 
리액트에서는 C가 대문자  그리고 중괄호로 적용 onClick={클릭될 떄 실행할 함수 } 
중괄호안에는 무조건 함수가 하나 딱 들어갈 수 있다.    표현식도 들어가면 안됨 

근데 여기 들어가는 함수가 만들기 귀찮다면  ={ () => { 실행할 내용} }

이거는 ES6 신문법 화살표 함수 
기존에 함수 만들고 콜백을 넣을때
-> addEventListener('click', function() { } ) 

이제 arrow 함수
-> addEventListener('click', () => { } )
똑같은 문법이고 this라는 값만 달라지지 

클릭시 state 값 변경 예제
let [ like, setLice ] =useState(0)

onClick={ ()=> { like + 1} }    불가!!

state는 그냥 변경이 안됨!!!

setLike로 항상 다루어주어야함 

그러므로 
onClick = { () => { setLike( like + 1) } }
꼭 이벤트안에 넣어야 한다 (상황에 보구)  이렇게 이벤트로 넣어서 변경해야 재렌더링이 이루어짐

그냥 바깥에두면 계속 재렌더링이 이루어질 수 있음


!!!코딩애플 유튜브 5강

이벤트 리스너에 함수를 집어넣을 때 
onClick= { 함수() } 이렇게 함수를 넣으면 안된다 xxxxxxx
--> 왜냐하면 저건 함수를 바로 호출해버린거

onClick = { 함수 } 이렇게 소괄호를 없애고 함수를 전달만 한다


state 배열 0번지 변경 원할 때
원본 state 는 수정 불가    ((특히 state 가 Array 나 Object  자료형이면))

그래서 state 의 복사본을 생성
var newArray = like;
newArray[0] = '여자코트 추천'
setLike(newArray)                  --이건 복사가 아니라 값 공유이다

근데 이렇게 복사하면 안되고
state를 deep copy 해서 수정해줘야함 
--> [...like]

deep copy 란 값공유x 하지않고  서로 독립적인 값을 가지는 복사 

... spread operator == 중괄호, 대괄호 둘다 다 제거를 해주세요라는 뜻  
그러면   usestate에 있는 중괄호가 제거가 된다 

그리고 다시 중괄호로 담는다.

리액트 대 원칙 : immutable data
직접 수정이 되면 안된다.

Array, object state 데이터 수정 변경 방법
-일단 변경함수를 써야함 

state 데이터 변경함수를 써야함
변경함수 안에 들어가는 것이 비슷한 자료형  (대체할데이터)

state는 직접 건들지말아라 



!!!코딩애플 유튜브 6강  컴포넌트

html 태그를 return 안에 사용하는데
return ( 
	<div></>
	<div></> 불가
)
리턴안에는 하나에 html 태그만 시작하고 끝나야함 
그래서 <div> 안에 연속 <div> 
근데 이게 보는게 불편하고 코드가 더러워진다 가독성다운
그래서 리액트의 Component문법을 사용한다
만드는법
function Moda() {
 return(
	<div/>
 ) }

컴포넌트 추천
-반복출현하는 HTML 덩어리 
-자주 변경되는 HTMl UI ( 성능적으로 좋음) 재렌더링이 절약
-다른 페이지 만들 때도 컴포넌트로 만듦

component 많이 만들면 단점 
-state 쓸 때 복잡해짐  ( 다른 로컬스코프이기 때문에 , 그래서 따로 전해줘야한다 
 ( 상위 컴포넌트에서 만든 state 쓰려면 props 문법을 이용해야함 







